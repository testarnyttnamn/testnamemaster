name: CI via Docker Image

# Trigger image build on pushes to main; run tests on PRs (and you can also
# kick it manually with workflow_dispatch)
on:
  push:
    branches:
      - main
    paths:
      - 'cloe/**'
      - 'configs/**'
      - 'environment.yml'
      - 'setup.cfg'
      - '.github/workflows/ci-with-docker.yml'
      - 'setup.py'
  pull_request:
    paths:
      - 'cloe/**'
      - 'configs/**'
      - 'environment.yml'
      - 'setup.cfg'
      - '.github/workflows/ci-with-docker.yml'
      - 'setup.py'
  workflow_dispatch:

env:
  IMAGE: ghcr.io/testarnyttnamn/likelihood-implementation:latest

jobs:
  build-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          # cache-from / cache-to can speed up rebuilds if you like:
          # cache-from: type=gha
          # cache-to:   type=gha,mode=max

  tests:
    needs: build-image
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Pull & run tests in container
        run: |
          docker pull $IMAGE
          docker run --rm \
            -v "${{ github.workspace }}":/src \
            -w /src \
            $IMAGE \
            bash -lc "pytest --verbose --pycodestyle --pydocstyle \
                           --junitxml=pytest.xml \
                           --cov=./ --cov-report=term --cov-report=xml=coverage.xml"

      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: pytest.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

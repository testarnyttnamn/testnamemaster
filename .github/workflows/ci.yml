name: CI

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - 'cloe/**'
      - 'configs/*'
      - 'data/ExternalBenchmark/*'
      - 'environment.yml'
      - '.github/workflows/ci.yml'
      - 'setup.cfg'

jobs:
  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cloe
          environment-file: environment.yml
          auto-activate-base: false

      - name: Show Conda packages
        run: conda list

      - name: Run Unit Tests
        run: python -m pytest --junitxml=pytest.xml --cov=cloe --cov-report=xml

      - name: Upload coverage and test results
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            pytest.xml
            coverage.xml

  verification:
    name: Verification Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cloe
          environment-file: environment.yml
          auto-activate-base: false

      - name: Run Verification Tests
        run: |
          export TF_CPP_MIN_LOG_LEVEL=1
          python -m pytest cloe/tests/verification

  docs:
    name: Build API Docs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cloe
          environment-file: environment.yml
          auto-activate-base: false

      - name: Build Docs
        run: |
          mkdir -p docs/build
          sphinx-apidoc --module-first -feo docs/source cloe
          sphinx-build docs/source docs/build
          mv docs/build html_build

      - name: Upload Docs Artifact
        uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: html_build/

  deploy-docs:
    name: Deploy Docs to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cloe
          environment-file: environment.yml
          auto-activate-base: false

      - name: Build Docs for Pages
        run: |
          mkdir -p docs/build
          sphinx-apidoc --module-first -feo docs/source cloe
          sphinx-build docs/source docs/build
          mv docs/build public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  profiling:
    name: Run Profiling
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cloe
          environment-file: environment.yml
          auto-activate-base: false

      - name: Run Profiling
        run: |
          python -m cProfile -o evaluate_likelihood.pstats run_cloe.py configs/config_profiling_evaluate_likelihood.yaml
          python -m cProfile -o mcmc.pstats run_cloe.py configs/config_profiling_mcmc.yaml
          mkdir -p products
          mv *.pstats products/

      - name: Upload Profiling Report
        uses: actions/upload-artifact@v4
        with:
          name: profiling-report
          path: products/

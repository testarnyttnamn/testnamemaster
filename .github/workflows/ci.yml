name: CI

on:
  push:
    branches:
      - master
      - main
      - ci-debug
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Remove pyhmcode from environment.yml on CI
        run: |
          sed -i '/pyhmcode/d' environment.yml

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip build-essential make gfortran python-is-python3 python3-dev

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9
          activate-environment: cloe
          environment-file: environment.yml
          use-mamba: true

      - name: Manually install pytest and pytest-cov
        run: conda install -n cloe pytest pytest-cov -y

      - name: Debug conda env update
        run: |
          conda env update -n cloe -f environment.yml --prune -v
          conda list -n cloe

      - name: Cache pytest cache
        uses: actions/cache@v3
        with:
          path: .pytest_cache
          key: ${{ runner.os }}-pytest-${{ hashFiles('**/environment.yml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pytest-

      - name: Create dummy hmcode module patch
        run: |
          echo "import sys" > dummy_hmcode.py
          echo "import types" >> dummy_hmcode.py
          echo "class DummyHMCode(types.ModuleType):" >> dummy_hmcode.py
          echo "    def __getattr__(self, name):" >> dummy_hmcode.py
          echo "        def dummy(*args, **kwargs): return None" >> dummy_hmcode.py
          echo "        return dummy" >> dummy_hmcode.py
          echo "sys.modules['hmcode'] = DummyHMCode('hmcode')" >> dummy_hmcode.py

      - name: Run tests with dummy patch and coverage
        run: |
          echo 'import dummy_hmcode' > test_wrapper.py
          echo 'import pytest; raise SystemExit(pytest.main(["--cov=cloe", "--cov-report=xml"]))' >> test_wrapper.py
          conda run -n cloe python test_wrapper.py

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          flags: unittests
          fail_ci_if_error: true

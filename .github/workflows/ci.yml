name: CI Pipeline

on:
  pull_request:
    paths:
      - 'cloe/**'
      - 'configs/**'
      - 'environment.yml'
      - 'setup.cfg'
      - '.github/workflows/ci.yml'
      - 'setup.py'
  push:
    branches:
      - main
    paths:
      - 'cloe/**'
      - 'configs/**'
      - 'environment.yml'
      - 'setup.cfg'
      - '.github/workflows/ci.yml'
      - 'setup.py'
  workflow_dispatch:

jobs:
  # -----------------------------------
  # 1. Unit tests + coverage (auto)
  # -----------------------------------
  tests:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"
          environment-file: environment.yml
          activate-environment: cloe
          cache-track: lock-file    # caches pkgs based on environment.yml

      - name: Confirm environment
        run: |
          conda list
          which python

      - name: Run pytest with coverage
        run: |
          python -m pytest \
            --verbose \
            --pycodestyle \
            --pydocstyle \
            --cov=./ \
            --cov-report=term \
            --cov-report=xml=coverage.xml \
            --junitxml=pytest.xml

      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: pytest.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  # -----------------------------------------
  # 2. Verification tests (manual trigger)
  # -----------------------------------------
  verification:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda & CLI deps
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.9"
          environment-file: environment.yml
          activate-environment: cloe
          cache-track: lock-file

      - name: Run verification suite
        run: |
          export TF_CPP_MIN_LOG_LEVEL=1
          python -m pytest cloe/tests/verification --junitxml=verification.xml

      - name: Upload verification report
        uses: actions/upload-artifact@v4
        with:
          name: verification-report
          path: verification.xml

  # ------------------------------------------------
  # 3. Build API docs for PR review (on pull_request)
  # ------------------------------------------------
  docs_review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda & docs deps
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.9"
          environment-file: environment.yml
          activate-environment: cloe
          cache-track: lock-file

      - name: Build Sphinx docs
        run: |
          mkdir -p docs/build
          sphinx-apidoc --module-first -feo docs/source cloe
          sphinx-build docs/source docs/build

      - name: Upload HTML build
        uses: actions/upload-artifact@v4
        with:
          name: html-build
          path: docs/build

  # ---------------------------------------------------------
  # 4. Publish docs to GitHub Pages (push to main branch only)
  # ---------------------------------------------------------
  pages:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda & docs deps
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.9"
          environment-file: environment.yml
          activate-environment: cloe
          cache-track: lock-file

      - name: Build Sphinx docs
        run: |
          mkdir -p docs/build
          sphinx-apidoc --module-first -feo docs/source cloe
          sphinx-build docs/source docs/build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build
          publish_branch: gh-pages

  # ----------------------------------------
  # 5. Profiling reports (manual trigger)
  # ----------------------------------------
  profiling:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniconda & CLI deps
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.9"
          environment-file: environment.yml
          activate-environment: cloe
          cache-track: lock-file

      - name: Run profiling
        run: |
          mkdir -p products
          python -m cProfile -o products/evaluate_likelihood.pstats run_cloe.py configs/config_profiling_evaluate_likelihood.yaml
          python -m cProfile -o products/mcmc.pstats      run_cloe.py configs/config_profiling_mcmc.yaml

      - name: Upload profiling artifacts
        uses: actions/upload-artifact@v4
        with:
          name: profiling-report
          path: products/

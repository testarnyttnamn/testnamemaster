name: CI Pipeline

on:
  pull_request:
    # only run on relevant changes
    paths:
      - 'cloe/**'
      - 'configs/**'
      - 'environment.yml'
      - 'setup.cfg'
      - '.github/workflows/ci.yml'
      - 'setup.py'
  push:
    branches:
      - main
    paths:
      - 'cloe/**'
      - 'configs/**'
      - 'environment.yml'
      - 'setup.cfg'
      - '.github/workflows/ci.yml'
      - 'setup.py'
  workflow_dispatch:  # for manual Verification & Profiling

jobs:
  # ------------------------------
  # 1. Unit tests + coverage
  # ------------------------------
  tests:
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    container:
      image: gitlab.euclid-sgs.uk:4567/pf-ist-likelihood/likelihood-implementation
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show environment & sources
        run: |
          source activate cloe
          conda list
          ls -a
          echo "${{ github.event_name }}"

      - name: Run pytest with coverage
        run: |
          python -m pytest \
            --verbose \
            --pycodestyle \
            --pydocstyle \
            --cov=./ \
            --cov-report=term \
            --cov-report=xml=coverage.xml \
            --junitxml=pytest.xml

      - name: Upload JUnit report
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: pytest.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  # ------------------------------
  # 2. Verification tests (manual)
  # ------------------------------
  verification:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    container:
      image: gitlab.euclid-sgs.uk:4567/pf-ist-likelihood/likelihood-implementation
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Run verification suite
        run: |
          export TF_CPP_MIN_LOG_LEVEL=1
          python -m pytest cloe/tests/verification --junitxml=verification.xml
      - name: Upload verification report
        uses: actions/upload-artifact@v3
        with:
          name: verification-report
          path: verification.xml

  # ------------------------------
  # 3. Build API docs for PR review (manual on PR)
  # ------------------------------
  docs_review:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    container:
      image: gitlab.euclid-sgs.uk:4567/pf-ist-likelihood/likelihood-implementation
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Sphinx docs
        run: |
          mkdir -p docs/build
          sphinx-apidoc --module-first -feo docs/source cloe
          sphinx-build docs/source docs/build
      - name: Upload HTML build
        uses: actions/upload-artifact@v3
        with:
          name: html-build
          path: docs/build

  # ------------------------------
  # 4. Publish docs to GitHub Pages
  # ------------------------------
  pages:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    container:
      image: gitlab.euclid-sgs.uk:4567/pf-ist-likelihood/likelihood-implementation
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Build Sphinx docs
        run: |
          mkdir -p docs/build
          sphinx-apidoc --module-first -feo docs/source cloe
          sphinx-build docs/source docs/build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build
          publish_branch: gh-pages

  # ------------------------------
  # 5. Profiling reports (manual)
  # ------------------------------
  profiling:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    container:
      image: gitlab.euclid-sgs.uk:4567/pf-ist-likelihood/likelihood-implementation
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Run profiling
        run: |
          python -m cProfile -o products/evaluate_likelihood.pstats run_cloe.py configs/config_profiling_evaluate_likelihood.yaml
          python -m cProfile -o products/mcmc.pstats run_cloe.py configs/config_profiling_mcmc.yaml
          ls products
      - name: Upload profiling artifacts
        uses: actions/upload-artifact@v3
        with:
          name: profiling-report
          path: products/
